<?php
namespace Config;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-08-17 at 17:38:08.
 */
class TestingTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Testing
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Testing;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * Generated from @assert ('test.ini',false) instanceOf 'Config\Config'.
     *
     * @covers Config\Testing::testCreate
     */
    public function testTestCreate()
    {
        $this->assertInstanceOf(
            'Config\Config',
            $this->object->testCreate('test.ini',false)
        );
    }

    /**
     * Generated from @assert ('test.ini',true) instanceOf 'Config\Config'.
     *
     * @covers Config\Testing::testCreate
     */
    public function testTestCreate2()
    {
        $this->assertInstanceOf(
            'Config\Config',
            $this->object->testCreate('test.ini',true)
        );
    }

    /**
     * Generated from @assert ('test.ini',true,array('filled_section','section2')) instanceOf 'Config\Config'.
     *
     * @covers Config\Testing::testCreate
     */
    public function testTestCreate3()
    {
        $this->assertInstanceOf(
            'Config\Config',
            $this->object->testCreate('test.ini',true,array('filled_section','section2'))
        );
    }

    /**
     * Generated from @assert ('notexistent.ini') throws Config\ConfigException.
     *
     * @covers Config\Testing::testCreate
     * @expectedException Config\ConfigException 
     */
    public function testTestCreate4()
    {
        $this->object->testCreate('notexistent.ini');
    }

    /**
     * Generated from @assert ('filled_section') == 3.
     *
     * @covers Config\Testing::getSection
     */
    public function testGetSection()
    {
        $this->assertEquals(
            3,
            $this->object->getSection('filled_section')
        );
    }

    /**
     * Generated from @assert ('section2') == 3.
     *
     * @covers Config\Testing::getSection
     */
    public function testGetSection2()
    {
        $this->assertEquals(
            3,
            $this->object->getSection('section2')
        );
    }

    /**
     * Generated from @assert ('loose_section') == 0.
     *
     * @covers Config\Testing::getSection
     */
    public function testGetSection3()
    {
        $this->assertEquals(
            0,
            $this->object->getSection('loose_section')
        );
    }

    /**
     * Generated from @assert ('nonexistent') == 0.
     *
     * @covers Config\Testing::getSection
     */
    public function testGetSection4()
    {
        $this->assertEquals(
            0,
            $this->object->getSection('nonexistent')
        );
    }

    /**
     * Generated from @assert ('filled_section','int_val') == 5.
     *
     * @covers Config\Testing::getValue
     */
    public function testGetValue()
    {
        $this->assertEquals(
            5,
            $this->object->getValue('filled_section','int_val')
        );
    }

    /**
     * Generated from @assert ('filled_section','array1') == array('ddd',42).
     *
     * @covers Config\Testing::getValue
     */
    public function testGetValue2()
    {
        $this->assertEquals(
            array('ddd',42),
            $this->object->getValue('filled_section','array1')
        );
    }

    /**
     * Generated from @assert ('loose_section','loose_str') == null.
     *
     * @covers Config\Testing::getValue
     */
    public function testGetValue3()
    {
        $this->assertEquals(
            null,
            $this->object->getValue('loose_section','loose_str')
        );
    }

    /**
     * Generated from @assert ('filled_section', 'int_val',10) == 10.
     *
     * @covers Config\Testing::setValue
     */
    public function testSetValue()
    {
        $this->assertEquals(
            10,
            $this->object->setValue('filled_section', 'int_val',10)
        );
    }

    /**
     * Generated from @assert ('section2', 'new_str','new_str') == 'new_str'.
     *
     * @covers Config\Testing::setValue
     */
    public function testSetValue2()
    {
        $this->assertEquals(
            'new_str',
            $this->object->setValue('section2', 'new_str','new_str')
        );
    }

    /**
     * Generated from @assert ('new_section', 'new_str2','new_str2') == 'new_str2'.
     *
     * @covers Config\Testing::setValue
     */
    public function testSetValue3()
    {
        $this->assertEquals(
            'new_str2',
            $this->object->setValue('new_section', 'new_str2','new_str2')
        );
    }
}
